<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Configuratore R12+1 keypad</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap" rel="stylesheet">

    <style>
        body {
            font-family: 'Roboto Mono', Consolas, Monaco, 'Courier New', monospace;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            background-color: #222;
            color: #fff;
            min-height: 100vh;
        }
        h1 {
            color: #fff;
        }
        .container {
            display: flex;
            gap: 40px;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            align-items: flex-start;
            color: #333;
        }
        .container label { /* Stile generale label nel container */
            color: #333;
            margin-bottom: 5px;
            display: block; /* Assicura che sia su una riga */
        }
        #numpad {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-template-rows: repeat(3, 1fr);
            gap: 10px;
            border: 2px solid #555;
            padding: 15px;
            background-color: #444;
            border-radius: 5px;
        }
        .key {
            width: 70px;
            height: 70px;
            border: 1px solid #999;
            background-color: #f0f0f0;
            color: #000;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: center;
            padding: 5px;
            box-shadow: 2px 2px 4px rgba(0,0,0,0.4);
            transition: background-color 0.2s, transform 0.1s;
            position: relative;
            font-family: 'Roboto Mono', Consolas, Monaco, 'Courier New', monospace;
            box-sizing: border-box;
        }
        .key:hover {
            background-color: #e0e0e0;
        }
        .key:active {
            transform: scale(0.95);
        }
        .key.selected {
            background-color: #a0d8ff;
            border-color: #007bff;
            box-shadow: 0 0 8px #007bff;
        }
        .keycode-label {
            position: absolute;
            top: 5px;
            left: 0;
            right: 0;
            font-size: 0.75em;
            color: #333;
            font-weight: bold;
            text-align: center;
            word-break: break-all;
            padding: 0 3px;
        }
         .key-placeholder {
            font-size: 0.9em;
            color: #555;
            text-align: center;
            margin-bottom: 5px;
        }
        #controls {
            display: flex;
            flex-direction: column;
            align-items: center; /* << CENTRA I FIGLI */
            width: 350px;
            min-width: 350px;
        }
        .select-group {
            margin-bottom: 15px;
            width: 100%;
        }
        .select-group label {
             text-align: left; /* Mantiene le label a sx */
        }
        select {
            width: 100%;
            padding: 8px;
            font-size: 0.85em;
            border-radius: 5px;
            border: 1px solid #ccc;
            background-color: #fff;
            color: #000;
            text-overflow: ellipsis;
            box-sizing: border-box;
            font-family: 'Roboto Mono', Consolas, Monaco, 'Courier New', monospace;
        }
        #encoder-switch-group {
            margin-top: 25px; /* Aumentato spazio */
            text-align: center; /* Centra la label */
            width: 100%; /* Occupa larghezza per centrare il figlio */
        }
        #encoder-key {
            margin-top: 5px;
            margin-left: auto; /* << CENTRA IL TASTO */
            margin-right: auto; /* << CENTRA IL TASTO */
            border: 2px dashed #ffc107;
        }
        #download-btn {
            padding: 12px 25px;
            font-size: 1.1em;
            cursor: pointer;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            margin-top: 40px; /* Aumentato spazio */
            transition: background-color 0.2s;
            font-family: 'Roboto Mono', Consolas, Monaco, 'Courier New', monospace;
        }
        #download-btn:hover {
            background-color: #218838;
        }
        optgroup {
            font-weight: bold;
            font-style: italic;
            background-color: #eee;
            color: #333;
            padding: 4px;
        }
        option {
             padding: 4px;
        }
    </style>
</head>
<body>

    <h1>Configuratore R12+1 keypad</h1>

    <div class="container">
        <div id="numpad">
            </div>
        <div id="controls">
            <div class="select-group">
                <label for="category-select">1. Seleziona Categoria:</label>
                <select id="category-select">
                    <option value="" disabled selected>-- Scegli Categoria --</option>
                </select>
            </div>
            <div class="select-group">
                <label for="keycode-select">2. Seleziona Keycode:</label>
                <select id="keycode-select">
                    <option value="" disabled selected>-- Scegli Categoria Prima --</option>
                </select>
            </div>
            <div id="encoder-switch-group">
                <label>Encoder Switch:</label>
                <div id="encoder-key" class="key">
                    <span class="keycode-label">S(KC_1)</span>
                    <span class="key-placeholder">[ENC]</span>
                </div>
            </div>

        </div>
    </div>

    <button id="download-btn">Download keymap.c</button>

    <script>
        const keycodesData = [
            { "category": "Basic & Transparent", "codes": [
                {"key": "KC_NO", "description": "Do nothing (No Operation)"}, {"key": "KC_TRANSPARENT", "description": "Pass through (KC_TRNS)"}, {"key": "_______", "description": "Alias for KC_TRNS"},
            ]},
            { "category": "Alphanumeric", "codes": [
                {"key": "KC_A", "description": "a and A"}, {"key": "KC_B", "description": "b and B"}, {"key": "KC_C", "description": "c and C"}, {"key": "KC_D", "description": "d and D"}, {"key": "KC_E", "description": "e and E"}, {"key": "KC_F", "description": "f and F"}, {"key": "KC_G", "description": "g and G"}, {"key": "KC_H", "description": "h and H"}, {"key": "KC_I", "description": "i and I"}, {"key": "KC_J", "description": "j and J"}, {"key": "KC_K", "description": "k and K"}, {"key": "KC_L", "description": "l and L"}, {"key": "KC_M", "description": "m and M"}, {"key": "KC_N", "description": "n and N"}, {"key": "KC_O", "description": "o and O"}, {"key": "KC_P", "description": "p and P"}, {"key": "KC_Q", "description": "q and Q"}, {"key": "KC_R", "description": "r and R"}, {"key": "KC_S", "description": "s and S"}, {"key": "KC_T", "description": "t and T"}, {"key": "KC_U", "description": "u and U"}, {"key": "KC_V", "description": "v and V"}, {"key": "KC_W", "description": "w and W"}, {"key": "KC_X", "description": "x and X"}, {"key": "KC_Y", "description": "y and Y"}, {"key": "KC_Z", "description": "z and Z"},
                {"key": "KC_1", "description": "1 and !"}, {"key": "KC_2", "description": "2 and @"}, {"key": "KC_3", "description": "3 and #"}, {"key": "KC_4", "description": "4 and $"}, {"key": "KC_5", "description": "5 and %"}, {"key": "KC_6", "description": "6 and ^"}, {"key": "KC_7", "description": "7 and &"}, {"key": "KC_8", "description": "8 and *"}, {"key": "KC_9", "description": "9 and ("}, {"key": "KC_0", "description": "0 and )"},
            ]},
            { "category": "Punctuation", "codes": [
                {"key": "KC_ENTER", "description": "Return (Enter)"}, {"key": "KC_ESCAPE", "description": "Escape"}, {"key": "KC_BACKSPACE", "description": "Delete (Backspace)"}, {"key": "KC_TAB", "description": "Tab"}, {"key": "KC_SPACE", "description": "Spacebar"}, {"key": "KC_MINUS", "description": "- and _"}, {"key": "KC_EQUAL", "description": "= and +"}, {"key": "KC_LEFT_BRACKET", "description": "[ and {"}, {"key": "KC_RIGHT_BRACKET", "description": "] and }"}, {"key": "KC_BACKSLASH", "description": "\\ and |"}, {"key": "KC_NONUS_HASH", "description": "Non-US # and ~"}, {"key": "KC_SEMICOLON", "description": "; and :"}, {"key": "KC_QUOTE", "description": "' and \""}, {"key": "KC_GRAVE", "description": "` and ~"}, {"key": "KC_COMMA", "description": ", and <"}, {"key": "KC_DOT", "description": ". and >"}, {"key": "KC_SLASH", "description": "/ and ?"}, {"key": "KC_NONUS_BACKSLASH", "description": "Non-US \\ and |"},
            ]},
            { "category": "Lock Keys", "codes": [
                {"key": "KC_CAPS_LOCK", "description": "Caps Lock"}, {"key": "KC_SCROLL_LOCK", "description": "Scroll Lock"}, {"key": "KC_NUM_LOCK", "description": "Num Lock"},
                {"key": "KC_LOCKING_CAPS_LOCK", "description": "Locking Caps Lock"}, {"key": "KC_LOCKING_NUM_LOCK", "description": "Locking Num Lock"}, {"key": "KC_LOCKING_SCROLL_LOCK", "description": "Locking Scroll Lock"},
            ]},
            { "category": "Navigation", "codes": [
                {"key": "KC_PRINT_SCREEN", "description": "Print Screen (PrtSc)"}, {"key": "KC_PAUSE", "description": "Pause/Break"}, {"key": "KC_INSERT", "description": "Insert"}, {"key": "KC_HOME", "description": "Home"}, {"key": "KC_PAGE_UP", "description": "Page Up"}, {"key": "KC_DELETE", "description": "Delete Forward"}, {"key": "KC_END", "description": "End"}, {"key": "KC_PAGE_DOWN", "description": "Page Down"},
                {"key": "KC_RIGHT", "description": "Right Arrow"}, {"key": "KC_LEFT", "description": "Left Arrow"}, {"key": "KC_DOWN", "description": "Down Arrow"}, {"key": "KC_UP", "description": "Up Arrow"},
                {"key": "KC_APPLICATION", "description": "Menu / Application"},
            ]},
            { "category": "Keypad", "codes": [
                {"key": "KC_NUM_LOCK", "description": "Keypad Num Lock"}, {"key": "KC_KP_SLASH", "description": "Keypad /"}, {"key": "KC_KP_ASTERISK", "description": "Keypad *"}, {"key": "KC_KP_MINUS", "description": "Keypad -"}, {"key": "KC_KP_PLUS", "description": "Keypad +"}, {"key": "KC_KP_ENTER", "description": "Keypad Enter"},
                {"key": "KC_KP_1", "description": "Keypad 1"}, {"key": "KC_KP_2", "description": "Keypad 2"}, {"key": "KC_KP_3", "description": "Keypad 3"}, {"key": "KC_KP_4", "description": "Keypad 4"}, {"key": "KC_KP_5", "description": "Keypad 5"}, {"key": "KC_KP_6", "description": "Keypad 6"}, {"key": "KC_KP_7", "description": "Keypad 7"}, {"key": "KC_KP_8", "description": "Keypad 8"}, {"key": "KC_KP_9", "description": "Keypad 9"}, {"key": "KC_KP_0", "description": "Keypad 0"},
                {"key": "KC_KP_DOT", "description": "Keypad ."}, {"key": "KC_KP_COMMA", "description": "Keypad ,"}, {"key": "KC_KP_EQUAL", "description": "Keypad ="},
            ]},
            { "category": "Function Keys", "codes": [
                {"key": "KC_F1", "description": "F1"}, {"key": "KC_F2", "description": "F2"}, {"key": "KC_F3", "description": "F3"}, {"key": "KC_F4", "description": "F4"}, {"key": "KC_F5", "description": "F5"}, {"key": "KC_F6", "description": "F6"}, {"key": "KC_F7", "description": "F7"}, {"key": "KC_F8", "description": "F8"}, {"key": "KC_F9", "description": "F9"}, {"key": "KC_F10", "description": "F10"}, {"key": "KC_F11", "description": "F11"}, {"key": "KC_F12", "description": "F12"},
                {"key": "KC_F13", "description": "F13"}, {"key": "KC_F14", "description": "F14"}, {"key": "KC_F15", "description": "F15"}, {"key": "KC_F16", "description": "F16"}, {"key": "KC_F17", "description": "F17"}, {"key": "KC_F18", "description": "F18"}, {"key": "KC_F19", "description": "F19"}, {"key": "KC_F20", "description": "F20"}, {"key": "KC_F21", "description": "F21"}, {"key": "KC_F22", "description": "F22"}, {"key": "KC_F23", "description": "F23"}, {"key": "KC_F24", "description": "F24"},
            ]},
            { "category": "Modifier Keys", "codes": [
                {"key": "KC_LEFT_CTRL", "description": "Left Control"}, {"key": "KC_LEFT_SHIFT", "description": "Left Shift"}, {"key": "KC_LEFT_ALT", "description": "Left Alt (Option)"}, {"key": "KC_LEFT_GUI", "description": "Left GUI (Win/Cmd)"},
                {"key": "KC_RIGHT_CTRL", "description": "Right Control"}, {"key": "KC_RIGHT_SHIFT", "description": "Right Shift"}, {"key": "KC_RIGHT_ALT", "description": "Right Alt (AltGr)"}, {"key": "KC_RIGHT_GUI", "description": "Right GUI (Win/Cmd)"},
            ]},
            { "category": "System & Media", "codes": [
                {"key": "KC_SYSTEM_POWER", "description": "System Power Down"}, {"key": "KC_SYSTEM_SLEEP", "description": "System Sleep"}, {"key": "KC_SYSTEM_WAKE", "description": "System Wake"},
                {"key": "KC_AUDIO_MUTE", "description": "Mute"}, {"key": "KC_AUDIO_VOL_UP", "description": "Volume Up"}, {"key": "KC_AUDIO_VOL_DOWN", "description": "Volume Down"},
                {"key": "KC_MEDIA_NEXT_TRACK", "description": "Next Track"}, {"key": "KC_MEDIA_PREV_TRACK", "description": "Previous Track"}, {"key": "KC_MEDIA_STOP", "description": "Stop"}, {"key": "KC_MEDIA_PLAY_PAUSE", "description": "Play/Pause"},
                {"key": "KC_MEDIA_SELECT", "description": "Media Select"}, {"key": "KC_MEDIA_EJECT", "description": "Eject"}, {"key": "KC_MAIL", "description": "Mail"}, {"key": "KC_CALCULATOR", "description": "Calculator"}, {"key": "KC_MY_COMPUTER", "description": "My Computer"},
                {"key": "KC_WWW_SEARCH", "description": "Web Search"}, {"key": "KC_WWW_HOME", "description": "Web Home"}, {"key": "KC_WWW_BACK", "description": "Web Back"}, {"key": "KC_WWW_FORWARD", "description": "Web Forward"}, {"key": "KC_WWW_STOP", "description": "Web Stop"}, {"key": "KC_WWW_REFRESH", "description": "Web Refresh"}, {"key": "KC_WWW_FAVORITES", "description": "Web Favorites"},
                {"key": "KC_BRIGHTNESS_UP", "description": "Brightness Up"}, {"key": "KC_BRIGHTNESS_DOWN", "description": "Brightness Down"},
            ]},
            { "category": "Quantum Keycodes", "codes": [
                {"key": "RESET", "description": "Reset (Bootloader)"}, {"key": "DEBUG", "description": "Toggle Debug Mode"}, {"key": "EEPROM_RESET", "description": "Reset EEPROM"},
                {"key": "KC_GESC", "description": "Grave Escape"}, {"key": "KC_LSPO", "description": "Left Shift, Parens Open"}, {"key": "KC_RCSO", "description": "Right Shift, Parens Close"},
                {"key": "LSFT_T(kc)", "description": "L-Shift / kc"}, {"key": "RSFT_T(kc)", "description": "R-Shift / kc"},
                {"key": "LCTL_T(kc)", "description": "L-Ctrl / kc"}, {"key": "RCTL_T(kc)", "description": "R-Ctrl / kc"},
                {"key": "LALT_T(kc)", "description": "L-Alt / kc"}, {"key": "RALT_T(kc)", "description": "R-Alt / kc"},
                {"key": "LGUI_T(kc)", "description": "L-GUI / kc"}, {"key": "RGUI_T(kc)", "description": "R-GUI / kc"},
            ]},
            { "category": "Layer Switching", "codes": [
                {"key": "MO(layer)", "description": "Momentary layer"}, {"key": "DF(layer)", "description": "Set base layer"}, {"key": "TG(layer)", "description": "Toggle layer"}, {"key": "OSL(layer)", "description": "One-shot layer"}, {"key": "TO(layer)", "description": "Turn on layer"}, {"key": "TT(layer)", "description": "Tap-Toggle layer"},
                {"key": "LT(layer, kc)", "description": "Layer-Tap"},
            ]},
            { "category": "Mod-Tap", "codes": [
                {"key": "MT(mod, kc)", "description": "Mod / kc"}, {"key": "LCS(kc)", "description": "LCTL+LSFT / kc"},
                {"key": "CTL_T(kc)", "description": "CTRL / kc"}, {"key": "SFT_T(kc)", "description": "SHIFT / kc"},
                {"key": "ALT_T(kc)", "description": "ALT / kc"}, {"key": "GUI_T(kc)", "description": "GUI / kc"},
            ]},
            { "category": "One Shot Keys", "codes": [
                {"key": "OSM(mod)", "description": "One-Shot Mod"}, {"key": "OSL(layer)", "description": "One-Shot Layer"},
            ]},
             { "category": "Aliases (Common)", "codes": [
                {"key": "KC_LSHIFT", "description": "KC_LEFT_SHIFT"}, {"key": "KC_RSHIFT", "description": "KC_RIGHT_SHIFT"},
                {"key": "KC_LCTRL", "description": "KC_LEFT_CTRL"}, {"key": "KC_RCTRL", "description": "KC_RIGHT_CTRL"},
                {"key": "KC_LALT", "description": "KC_LEFT_ALT"}, {"key": "KC_RALT", "description": "KC_RIGHT_ALT"},
                {"key": "KC_LGUI", "description": "KC_LEFT_GUI"}, {"key": "KC_RGUI", "description": "KC_RIGHT_GUI"},
                {"key": "KC_ENT", "description": "KC_ENTER"}, {"key": "KC_ESC", "description": "KC_ESCAPE"},
                {"key": "KC_BSPC", "description": "KC_BACKSPACE"}, {"key": "KC_SPC", "description": "KC_SPACE"},
                {"key": "KC_MINS", "description": "KC_MINUS"}, {"key": "KC_EQL", "description": "KC_EQUAL"},
                {"key": "KC_LBRC", "description": "KC_LEFT_BRACKET"}, {"key": "KC_RBRC", "description": "KC_RIGHT_BRACKET"},
                {"key": "KC_BSLS", "description": "KC_BACKSLASH"}, {"key": "KC_SCLN", "description": "KC_SEMICOLON"},
                {"key": "KC_QUOT", "description": "KC_QUOTE"}, {"key": "KC_GRV", "description": "KC_GRAVE"},
                {"key": "KC_COMM", "description": "KC_COMMA"}, {"key": "KC_SLSH", "description": "KC_SLASH"},
                {"key": "KC_DEL", "description": "KC_DELETE"}, {"key": "KC_INS", "description": "KC_INSERT"},
                {"key": "KC_PGUP", "description": "KC_PAGE_UP"}, {"key": "KC_PGDN", "description": "KC_PAGE_DOWN"},
                {"key": "KC_PSCR", "description": "KC_PRINT_SCREEN"}, {"key": "KC_SLCK", "description": "KC_SCROLL_LOCK"},
                {"key": "KC_PAUS", "description": "KC_PAUSE"}, {"key": "KC_RGHT", "description": "KC_RIGHT"},
                {"key": "KC_APP", "description": "KC_APPLICATION"}, {"key": "KC_NUMLOCK", "description": "KC_NUM_LOCK"},
                {"key": "KC_PSLS", "description": "KC_KP_SLASH"}, {"key": "KC_PAST", "description": "KC_KP_ASTERISK"},
                {"key": "KC_PMNS", "description": "KC_KP_MINUS"}, {"key": "KC_PPLS", "description": "KC_KP_PLUS"},
                {"key": "KC_PENT", "description": "KC_KP_ENTER"}, {"key": "KC_P1", "description": "KC_KP_1"},
                {"key": "KC_P2", "description": "KC_KP_2"}, {"key": "KC_P3", "description": "KC_KP_3"},
                {"key": "KC_P4", "description": "KC_KP_4"}, {"key": "KC_P5", "description": "KC_KP_5"},
                {"key": "KC_P6", "description": "KC_KP_6"}, {"key": "KC_P7", "description": "KC_KP_7"},
                {"key": "KC_P8", "description": "KC_KP_8"}, {"key": "KC_P9", "description": "KC_KP_9"},
                {"key": "KC_P0", "description": "KC_KP_0"}, {"key": "KC_PDOT", "description": "KC_KP_DOT"},
                {"key": "KC_VOLU", "description": "KC_AUDIO_VOL_UP"}, {"key": "KC_VOLD", "description": "KC_AUDIO_VOL_DOWN"},
                {"key": "KC_MPLY", "description": "KC_MEDIA_PLAY_PAUSE"}, {"key": "KC_MSTP", "description": "KC_MEDIA_STOP"},
                {"key": "KC_MPRV", "description": "KC_MEDIA_PREV_TRACK"}, {"key": "KC_MNXT", "description": "KC_MEDIA_NEXT_TRACK"},
            ]},
        ];

        // JavaScript
        const numpadDiv = document.getElementById('numpad');
        const categorySelect = document.getElementById('category-select');
        const keycodeSelect = document.getElementById('keycode-select');
        const downloadBtn = document.getElementById('download-btn');
        const encoderKey = document.getElementById('encoder-key');

        const ROWS = 3;
        const COLS = 4;
        let selectedKeyElement = null;
        let keymap = Array(ROWS).fill(null).map(() => Array(COLS).fill('KC_NO'));
        let encoderSwitchKey = 'S(KC_1)';

        function populateCategoryDropdown() {
            categorySelect.innerHTML = '<option value="" disabled selected>-- Scegli Categoria --</option>';
            keycodesData.forEach((category, index) => {
                const option = document.createElement('option');
                option.value = index;
                option.textContent = category.category;
                categorySelect.appendChild(option);
            });
        }

        function populateKeycodeDropdown(categoryIndex) {
            keycodeSelect.innerHTML = '<option value="" disabled selected>-- Scegli Keycode --</option>';
            if (categoryIndex === "" || categoryIndex === null) {
                keycodeSelect.disabled = true;
                return;
            }

            const selectedCategory = keycodesData[parseInt(categoryIndex)];
            if (selectedCategory && selectedCategory.codes) {
                 selectedCategory.codes.forEach(code => {
                    const option = document.createElement('option');
                    option.value = code.key;
                    option.textContent = `${code.description} (${code.key})`;
                    keycodeSelect.appendChild(option);
                });
                keycodeSelect.disabled = false;
            } else {
                 keycodeSelect.disabled = true;
            }
        }

        function createNumpadGrid() {
            numpadDiv.innerHTML = '';
            for (let r = 0; r < ROWS; r++) {
                for (let c = 0; c < COLS; c++) {
                    const key = document.createElement('div');
                    key.classList.add('key');
                    key.dataset.row = r;
                    key.dataset.col = c;
                    key.dataset.isEncoder = 'false';

                    const label = document.createElement('span');
                    label.classList.add('keycode-label');
                    label.textContent = keymap[r][c];
                    key.appendChild(label);

                    const placeholder = document.createElement('span');
                    placeholder.classList.add('key-placeholder');
                    placeholder.textContent = `[${r+1},${c+1}]`;
                    key.appendChild(placeholder);

                    key.addEventListener('click', () => handleKeyClick(key));
                    numpadDiv.appendChild(key);
                }
            }
        }

        encoderKey.dataset.isEncoder = 'true';
        encoderKey.addEventListener('click', () => handleKeyClick(encoderKey));


        function handleKeyClick(keyElement) {
            if (selectedKeyElement) {
                selectedKeyElement.classList.remove('selected');
            }
            selectedKeyElement = keyElement;
            selectedKeyElement.classList.add('selected');
            keycodeSelect.value = "";
        }

        categorySelect.addEventListener('change', () => {
            populateKeycodeDropdown(categorySelect.value);
            keycodeSelect.value = "";
        });

        keycodeSelect.addEventListener('change', () => {
            if (selectedKeyElement && keycodeSelect.value) {
                const newKeycode = keycodeSelect.value;

                if (selectedKeyElement.dataset.isEncoder === 'true') {
                    encoderSwitchKey = newKeycode;
                } else {
                    const row = selectedKeyElement.dataset.row;
                    const col = selectedKeyElement.dataset.col;
                    keymap[row][col] = newKeycode;
                }
                selectedKeyElement.querySelector('.keycode-label').textContent = newKeycode;
            }
        });

        function generateCCode() {
            const allKeys = [...keymap.flat(), encoderSwitchKey];
            let maxLen = 0;
            allKeys.forEach(k => {
                if (k.length > maxLen) maxLen = k.length;
            });
            maxLen = Math.max(maxLen, 7);

            const pad = (key) => key.padEnd(maxLen + 3, ' ');

            let cCode = `#include QMK_KEYBOARD_H\n\n`;
            cCode += `const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n`;
            cCode += `    [0] = LAYOUT_numpad_3x4k(\n`;
            cCode += `        ${pad(keymap[0][0])},${pad(keymap[0][1])},${pad(keymap[0][2])},${pad(keymap[0][3])}, ${pad(encoderSwitchKey)},\n`;
            cCode += `        ${pad(keymap[1][0])},${pad(keymap[1][1])},${pad(keymap[1][2])},${pad(keymap[1][3])},\n`;
            cCode += `        ${pad(keymap[2][0])},${pad(keymap[2][1])},${pad(keymap[2][2])},${pad(keymap[2][3])}\n`;
            cCode += `    )\n`;
            cCode += `};\n\n`;
            cCode += `bool encoder_update_user(uint8_t i, bool cw) {\n`;
            cCode += `    tap_code16(cw ? KC_WH_D : KC_WH_U);   // scroll down / up\n`;
            cCode += `    return false;\n`;
            cCode += `}\n`;

            return cCode;
        }

        downloadBtn.addEventListener('click', () => {
            const code = generateCCode();
            const blob = new Blob([code], { type: 'text/plain;charset=utf-8' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'keymap.c';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });

        createNumpadGrid();
        populateCategoryDropdown();
        populateKeycodeDropdown("");

    </script>

</body>
</html>